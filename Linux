#官方网址（中文版）
http://man.linuxde.net/

##组合命令
#查找一个变量在哪个文件下的哪一行
find . -type f -name "*.py" | xargs egrep -n "{val_name}"

#查看目录
ls -F | grep /

#比较两个目录下文件的不同（目录结构不同）
(cd /root/a; find . | sort > /tmp file); (cd /root/b; find . | sort | diff /tmp file -)
diff -r dir1 dir2           #比较文件目录不同和文件内容不同

#自动修改时间:
#ntpd服务可以在修正时间的同时，修正cpu tick。理想的做法为，在开机的时候，使用ntpdate强制同步时间，在其他时候使用ntpd服务
#同步时要注意的是，ntpd有一个自我保护设置: 如果本机与上源时间相差太大, ntpd不运行. 所以新设置的时间服务器一定要先ntpdate从上源取得时间初值, 然后启动ntpd服务。ntpd服务运行后, 先是每64秒与上源服务器同步一次, 根据每次同步时测得的误差值经复杂计算逐步调整自己的时间, 随着误差减小, 逐步增加同步的间隔. 每次跳动, 都会重复这个调整的过程.
service ntpd stop#必须先关闭该服务，否则端口占用
ntpdate asia.pool.ntp.org   
service ntpd start

#添加swap（用文件来充当swap）
dd if=/dev/zero of=/var/{swap_filename} bs=1M count=4000       #每次创建1M，共创建4000次，一共创建4G大小的文件(data file)
mkswap /var/{swap_filename}             #使这个文件成为swap分区（swap file）
swapon /var/{swap_filename}             #挂载该swap分区
/var/swap   swap    swap    defaults    0 0         #添加该行到/etc/fstab文件末尾,使开机自启

#使用ps和kill来杀死进程
ps aux | grep {name} | grep -v grep |awk '{print $2}'| xargs kill       #将{name}换成搜索的内容

#awk
ll | awk -F '.' '{print $NF}'           #打印最后一个
ll | awk -F '.' '{print $NF-1}'         #打印倒数第二个
ll | awk -F '.' '{print $1"."$2}'       #打印第一个和第二个，使用.号连接


##配置文件
#vim4个空格替换Tab
全局文件：/etc/vim/vimrc        当前用户文件：~/.vimrc
set tabstop=4               #tab占4个空格
set expandtab               #用4个空格代替tab
set softtabstop=4           #在设置expandtab时，输入backspace删除4个空格
set autoindent              #自动缩进
set ignorecase              #查找时忽略大小写
set smartcase               #当输入含有大写时强制区分大小写
set shiftwidth=4            #一般情况下:tabstop=softtabstop=shifwidth
nnoremap w ww                #在normal模式下按下w相当于按下ww(不会递归，递归使用nmap,这样做会陷入死循环)
map <F4> :call MyFunc()     #使用<F4>添加文件头信息
function MyFunc()
    call append(0,"#JiangYe")
    call append(2,"#2018-10-1")
endf


#centos6网络配置:
/etc/sysconfig/network-scripts/ifcfg-eth0
ONBOOT=yes
BOOTPROTO=static#不使用dhcp
IPADDR=192.168.0.183
NETMASK=255.255.255.0
GATEWAY=192.168.0.1
DNS1=114.114.115.115

#开机自启脚本：
/etc/rc.d/init.d/testd      #新建文件testd，文件内容如下（三行）
    #!/bin/bash
    #chkconfig:235 99 99        #235表示在2、3、5级别下才运行，后两位分别代表启动/停止优先级，优先级范围是0~100，数字越大，优先级越低
    touch /test.txt             #执行的命令
chkconfig --add testd       #添加服务并开启（在相应的rc[0-6].d/中建立软连接，链接的文件就是testd）
chkconfig testd on          #启动
chkconfig testd off         #关闭

#开机默认进入init级别
runlevel                    #查看当前所在init级别
/etc/inittab                #配置文件，写入下面这一行
id:3:initdefault:           #3表示开机自动进入init3

#ssh登录免密码:A登录B
方法一：在B主机的~/.ssh/authorize_keys文件下写入A主机的id_rsa.pub
方法二：在A主机上运行ssh-copy-id -i ~/.ssh/id_rsa.pub {username}@192.168.1.1        #该命令自动完成方法一的操作



##添加环境变量
单个用户文件：~/.bash_profile       所有用户：/etc/profile
加上下面一句
export PATH=$PATH:/root/JY          #注意，JY/文件下的程序可以运行，但是JY/jy/下的程序不能运行



##单个命令
date -s '19961114 10:33:01' && hwclock -w   #先修改系统时间，再将系统时间写入硬件时间
ls -lt          #按时间排序
mkdir -p        #循环建立目录
mkdir -rf {filename}    #循环强制删除，可以删除该目录下以'-'短横线开头的文件
grep "a.py"             #能匹配a.py,aapy,abpy,acpy...........
grep "a\.py"            #只能匹配a.py                       
grep a\.py              #能匹配a.py,aapy,abpy,acpy...........       #所以加引号才能使用正则
tail -f {filename}      #实时查看文件添加内容
telnet baidu.com 80     #查询目标主机是否开放该端口
w           	#查看所有登录tty，防止在多人操作是关机
wall "{message}"        #发送广播消息给所有登录的tty，告知他们要关机了或者其他事项
wget -O name {url}      #将下载的文件命名为name
cat a.txt > b.txt       #将a.txt内容重定向到b.txt中
cat a.txt >> b.txt      #将a.txt内容以追加的方式重定向到b.txt中
scp filename root@192.168.1.100:re_filename     #linux之间传输文件
sed -i '1,100d' a.txt   #将a.txt中的前一百行删除
zip -q -r test.zip /root/test   #将/root/test目录压缩成test.zip，使用unzip test.zip可以解压
iotop -o -d 5           #查看系统ip使用情况
ls | sort -r            #反向排序
echo "nihao jiangye" | tr 'a-z' 'A-Z'       #将a-z替换成A-Z，最后输出NIHAO JIANGYE
nohup command > myout.file 2>&1 &           #后台运行，即使关闭终端也继续运行

##vim下命令
%               #括号跳转
:!ls            #在vim下执行shell命令
:%s/\t/    /g 	#当前文件下四个空格替换Tab
:%s/{name}//gn          #显示查找关键字的个数 
:1,10g/{name}/d         #删除1~10行中有{name}关键字的行
:1,10d                  #删除1~10所有
:help key-notation      #查看键位名称
:tabnew {tab_name}      #新建tab，在normal模式下使用gt/gT来切换tab
:tabfirst/tablast       #切换到第一/最后一个tab
:tabclose               #关闭tab
Ctrl+w    h/j/k/l       #多窗口下使用该命令选择窗口
Ctrl+a/x		#数字自动加一减一，多用于宏操作
:[vertical] resize {number}         #在vsp或者sp打开新窗口后，通过该命令调节窗口大小
.               #normal下，一个点，重复前一步操作
Ctrl+v          #矩形状操作,r:选中的内容替换（数量一致），c:修改（数量可以不一致），I:行首添加，A:行尾添加
#宏操作:
q a         #normal下录制寄存器a，进入宏的录制模式
{一系列操作}
在normal下按下q，退出宏的录制模式
{number}@a  #执行number次宏录制下的操作
ctrl + s/q      #锁屏/解锁
m+a	#标记
'+a	#跳到a标记处


##rpm
rpm --eval %{_bindir}    #查看SPEC文件下的内置宏
rpm -ivh filename.rpm   #解包装包
rpm -Uvh filename.rpm   #先卸载包，再安装包(用于升级)
rpm -e filename.rpm     #卸载已经安装的包
rpm -qfi filename       #查看文件属于哪个包
rpm -qpi filename.rpm   #查看该rpm包的信息
rpm -qil rpmname        #查看已安装包具体安装了哪些文件


##iptables
iptables <-A/I/D/R> 规则链名 [规则号] <-i/o 网卡名> -p 协议名 <-s 源IP/源子网> --sport 源端口 <-d 目标IP/目标子网> --dport 目标端口 -j 动作
#A:添加          I:插入          D:删除          R:替换
#规则链名：  INPUT:处理入数据包              OUTPUT:处理出数据包
#动作：      ACCEPT:接受                     DROP:拒绝               其他上网查资料
iptables -L -n --line-numbers    #查看列表和标号（标号可以用于删除）
iptables -A INPUT -s 192.168.1.0/24 -j ACCEPT   #允许该网段的流量进入
iptables -A OUTPUT -s 192.168.2.0/24 -j DROP    #禁止流量流向该网段
iptables -I OUTPUT {line_number} -s 192.168.2.0/24 -j ACCEPT    #添加规则到指定位置
iptables -R OUTPUT {line_number} -s 192.168.3.0/24 -j ACCEPT    #修改指定位置的规则
iptables -D INPUT 3#删除INPUT链中标号为3的规则
iptables -F     #删除所有规则
iptables –A INPUT –i lo –p all –j DROP      #ping 127.0.0.1失败
iptables –A OUTPUT –o lo –p all –j DROP
#标号小的优先级高，当拒绝为2，接受为3时，结果是拒绝         当拒绝为3，接受为2时，结果是接受

##tcpdump
tcpdump  {tcp/udp port 80 and not 81 -i eth0} and -Z root {host/net 1.1.1.1/1.1.1.0}/{src/dst 1.1.1.1} -w filename


##rrdtool
rrdtool create {rrd_name} --step {num_second} DS:{val_name}:{type_dst}:{num_limit_ava}:{num_min}:{num_max} RRA:{type_cf}:{num_valve}:{num_rra_is_many_step}:{num_sum}
#example:rrdtool create my.rrd --step 1 DS:myval:COUNTER:5:0:U RRA:MIN:0.5:10:86400

rrdtool update {rrd_name} {time}:{value}
#example:rrdtool update my.rrd 1539766754:111   #可以用N来代替{time},表示当前时间

rrdtool fetch -r 1  my1.rrd AVERAGE     #-r表频率
#rrdtool fetch eth0.rrd AVERAGE -r 1200 --end $((($(date +%s)/1200)*1200))      使用-r的正确用法

rrdtool graph my.png -s 1539765790 -e 1539765920 -t "title" -v "y_name" -w 100 -h 100  DEF:{name}=my.rrd:myval:AVERAGE:step=2  LINE1/AREA:{name}#ff0000:"show_line_name"

rrdtool info {rrd_name}

DST 实例说明
#假设 RRDtool 收到4个值，分别是300，600，900，1200。 
#Step = 300 seconds
COUNTER = 1，1，1，1
DERIVE = 1，1，1，1 
ABSOLUTE = 1，2，3，4
GAUGE = 300，600，900，1200

CF 实例说明
#PDP为 4，2，1，3
AVERAGE ：则结果为 (4+2+1+3)/4=2.5
MAX ：结果为4个数中的最大值 4
MIN ：结果为4个数中的最小值1
LAST ：结果为4个数中的最后一个 3



##查看修改文件最大引用数
ulimit -a | grep open       #查看
ulimit -n 2048              #修改，重启失效
lsof -p {pid} | grep {file_name} | wc -l        #查看某个进程对某个文件的引用数
vim /etc/security/limits.conf       #配置文件下修改最大引用数，加上下面一行
    * - nofile 2048                 #*号表示所有用户生效，可以换成用户名来指定某个用户生效          


##yum
#yum下载rpm包，不安装
yum install yum-plugin-downloadonly         #安装yum插件：--downloadonly
yum install --downloadonly --downloaddir=/tmp mysql     #将mysql和其依赖的rpm包全部下载到/tmp/目录下

#yum安装本地rpm包
yum localinstall mysql


##ssh免秘登录
ssh-copy-id  root@192.168.201.183       #实际上ssh-copy-id 命令就是将当前主机id_rsa.pub中的内容，追加到目标主机上的~/.ssh/authorized_keys文件上，如果该文件不存在，则创建


##md5sum
md5sum abc.txt def.txt > md5.txt	#制作md5校验文件
md5sum -c md5.txt			#校验文件是否被更改


##disown，有输入输出会出错
#移出最近一个正在执行的后台任务
$ disown
# 移出所有正在执行的后台任务
$ disown -r
# 移出所有后台任务
$ disown -a
# 不移出后台任务，但是让它们不会收到SIGHUP信号
$ disown -h
# 根据jobId，移出指定的后台任务
$ disown %2
$ disown -h %2

#比disown更好，可以输入输出，将其重定向了
nohup node server.js &
nohup command > myout.file 2>&1 &


#更换国内源
yum install -y epel-release && yum update

#文本去重
cat xx | sort | uniq

#本地发包
tcpprep -a client -i p.cap -o p.cap.cache
tcpreplay -t -c p.cap.cache -i eth2 -I eth3 p.cap









