1.cookie(下面是在Centos6上以apache2.4为服务器，py为cgi)
服务器设置cookie时，当没有给生存时间时，cookie存于内存中，当浏览器（非当前页面）关闭时，cookie也就清除。
当设置生存时间小于当前时间，cookie直接过期，当大于当前时间，就将cookie保存在硬盘中，关闭浏览器不会清除，到期限时间才删除。

2.目录rwx的作用（当文件没有w权限是，root也没办法写入，但是root可以更改文件的权限）
r:可以ls查看目录下的文件，但是不能find到该目录下的文件
w:没有任何作用
x:可以进入该目录
rw:跟r作用一样
rx:可以修改目录下的文件的内容，可以ls,find,tree等一切查看，可以通过tab键补全文件名,不能创建，删除，重命名，移动该目录下的文件
wx:可以修改目录下的文件的内容，可以创建、删除、重命名、复制文件，不能ls,find,tree等一切查看，无法通过tab键补全文件名

3.sendmail
在linux上运行的程序，可以完成使用命令行的方式发送邮件

4.科来
在windows下运行的软件，可以完成pcap包的修改，播放

5.rrdtool
在linux上运行的程序，一个环形数据库，可以通过该数据库中的数据绘制折线图，可以完成精确到秒的绘制（可用于脉搏的记录和可视化）

6.simple event correlator（SEC:简单事件相关器）
在linux上运行的程序，可以自定义规则监控某个文件，当文件添加数据时，运行规则对添加数据进行判断，若通过判断，可以执行自定义的操作

7.加密
MD5/SHA：不使用密钥，1）很难出现不同源文件加密结果相同，2）更难找到一个源文件使其加密得到指定结果
DES：对称加密，使用密钥加密
RSA/DSA/ECC：非对称加密，群发用私钥加密，大家用公钥解密，私发用公钥加密，主人用私钥解密


#source filename, sh filename, ./filename区别
1.新建一个test.sh脚本，内容为:A=1；
2.修改其可执行权限：chmod +x test.sh；
3.运行sh test.sh后，echo $A，显示为空，因为A=1并未传回给当前shell；
4.运行./test.sh后，也是一样的效果；
5.运行source test.sh 或者 . test.sh，然后echo $A，则会显示1，说明A=1的变量在当前shell中；

#计算机是区分符号位的，不能简单的对符号位赋值
例如：char ==> int      小到大，符号位很重要
    char a;             //char is for [-128~128]
    a=254;              //有符号位，且符号位为1
    int i = a;          //首先复制符号位，再将缺位置为符号位，再将非缺位复制（0xfffffffe）
    printf(i)           //i is -2（0xfffffffe）
    unsigned char aa = 254;
    i = aa;
    printf(i)           //i is 254
但是：int ==> char      大到小，只把大的低位复制到小中，符号位不影响
还有：0xff == 0xffffffff


http 1.1有keep-alive长连接，一个socket下载完一个资源后，可以不关闭继续下载其他资源，一次网页请求有多个socket一起请求不同资源

socket保活，使用setsockopt函数，设置心跳，超过多少时间没有消息发送就认为对端down，然后关闭

语言的限制只是规范我们的行为，不能说在限制内的一切行为都是规范的，例如C语言中，理论上退出函数，应该释放局部变量，但是在某些情况
下，变量没有被释放，该地址还是可读状态，甚至可写状态。所以要自己遵守规范，而不是靠编译器。

